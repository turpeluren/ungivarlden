---
import type { Form as Props } from '~/types';
import Button from '~/components/ui/Button.astro';

const { name, inputs, textarea, disclaimer, button = 'Contact us', description = '', submitMessage = '' } = Astro.props;
var checkBoxChecked = false;
---

<form id="contact" name={name} method="POST" data-netlify="true">
  {
    inputs &&
      inputs.map(
        ({ type = 'text', name, label = '', autocomplete = 'on', placeholder = '' }) =>
          name && (
            <div class="mb-6">
              {label && (
                <label for={name} class="block text-sm font-medium">
                  {label}
                </label>
              )}
              <input
                type={type}
                name={name}
                id={name}
                autocomplete={autocomplete}
                placeholder={placeholder}
                class="py-3 px-4 block w-full text-md rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900"
              />
            </div>
          )
      )
  }

  {
    textarea && (
      <div>
        <label for="textarea" class="block text-sm font-medium">
          {textarea.label}
        </label>
        <textarea
          id="textarea"
          name={textarea.name ? textarea.name : 'message'}
          rows={textarea.rows ? textarea.rows : 4}
          placeholder={textarea.placeholder}
          class="py-3 px-4 block w-full text-md rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900"
        />
      </div>
    )
  }

  <!-- honeypot? -->
  <div class="hidden">
    <label for="textarea" class="block text-sm font-medium">
      text
    </label>
    <textarea
      id="textarea2"
      name='meddelande'
      rows=4
      class="py-3 px-4 block w-full text-md rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900"
    />
  </div>

  {
    disclaimer && (
      <div class="mt-3 flex items-start">
        <div class="flex mt-0.5">
          <input
            id="disclaimer"
            name="disclaimer"
            type="checkbox"
            onchange='some_var=this.checked;'
            class="cursor-pointer mt-1 py-3 px-4 block w-full text-md rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900"
          />
        </div>
        <div class="ml-3">
          <label for="disclaimer" class="cursor-pointer select-none text-sm text-gray-600 dark:text-gray-400">
            {disclaimer.label}
          </label>
        </div>
      </div>
    )
  }

  {
    button && (
      <div class="mt-10 grid">
        <Button id="submitButton" variant="primary" type="submit">
          {button}
        </Button>
      </div>
    )
  }

  {
    description && (
      <div class="mt-3 text-center">
        <p class="text-sm text-gray-600 dark:text-gray-400">{description}</p>
      </div>
    )
  }
</form>

<script define:vars={{ submitMessage, checkBoxChecked }}>

  const handleSubmit = (event) => {
    event.preventDefault();

    const checkBox = window.document.getElementById("disclaimer");
    if (checkBox) {
      if (!checkBox.checked) {
        alert("Du m책ste g책 med p책 vilkoren genom att kryssa i rutan innan du kan skicka formul채ret.");
        return;
      }
    }

    const myForm = event.target;
    const formData = new FormData(myForm);
    
    fetch("/", {
      method: "POST",
      headers: { "Content-Type": "application/x-www-form-urlencoded" },
      body: new URLSearchParams(String(formData)).toString(),
    })
      .then(() => alert(submitMessage))
      .catch((error) => alert(error));
  };

  function flipCheckBox() {
    checkBoxChecked = some_var;
    console.log(checkBoxChecked)
    window.document.querySelector("submitButton").classList.toggle("opacity-10");
  }

  const myMaybeNullElement = window.document.querySelector("form");
  if (myMaybeNullElement === null) {
  } else {
    myMaybeNullElement.addEventListener("submit", handleSubmit);
  }
  const myMaybeNullElement2 = window.document.querySelector("disclaimer");
  if (myMaybeNullElement2 === null) {
  } else {
    myMaybeNullElement2.addEventListener("click", flipCheckBox);
  }
</script>